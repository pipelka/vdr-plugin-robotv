ARG VDR_VERSION=2.4

RUN apk update && apk add build-base freetype-dev fontconfig-dev gettext-dev \
	libjpeg-turbo-dev libcap-dev pugixml-dev curl-dev git bzip2 libexecinfo-dev \
	ncurses-dev bash avahi-libs avahi-dev pcre-dev sqlite-dev pkgconf libdvbcsa-dev

RUN mkdir -p /build
WORKDIR /build

RUN echo "building roboTV ..."

RUN git clone https://github.com/pipelka/vdr.git -b vdr-robotv/${VDR_VERSION} vdr
RUN git clone --single-branch -b pr-sockethandler-v2.2.5 https://github.com/pipelka/vdr-plugin-dvbapi.git vdr/PLUGINS/src/dvbapi
RUN git clone https://github.com/vdr-projects/vdr-plugin-epgsearch.git vdr/PLUGINS/src/epgsearch
RUN git clone --single-branch -b robotv https://github.com/pipelka/vdr-plugin-satip.git vdr/PLUGINS/src/satip
RUN git clone https://github.com/vdr-projects/vdr-plugin-streamdev.git vdr/PLUGINS/src/streamdev

# COPY ROBOTV PLUGIN SOURCES
RUN mkdir -p vdr/PLUGINS/src/robotv
COPY . vdr/PLUGINS/src/robotv/
RUN make -C vdr/PLUGINS/src/robotv clean

WORKDIR vdr
COPY docker/templates/Make.* /build/vdr/

RUN mkdir -p /build/patches
COPY docker/patches/ /build/patches/

# VDR patches
RUN for patch in `ls /build/patches/vdr`; do \
        echo ${patch} ; \
        patch -p1 < /build/patches/vdr/${patch} ; \
    done

RUN make $BUILDFLAGS -j 8
RUN mkdir -p /opt/vdr

RUN make $BUILDFLAGS install

RUN for plugin in robotv epgsearch satip streamdev-server ; do \
        strip -s --strip-debug /opt/vdr/lib/libvdr-${plugin}.so.* ; \
    done ; \
    strip -s --strip-debug /opt/vdr/bin/vdr


RUN rm -Rf /opt/vdr/man
RUN rm -Rf /opt/vdr/locale/*

ENV LIBS="dvbhddevice dvbsddevice epgtableid0 hello osddemo pictures rcu skincurses status svccli svcsvr svdrpdemo"
RUN for lib in ${LIBS} ; do \
    echo "removing /opt/vdr/lib/libvdr-$lib" ; \
        rm -f /opt/vdr/lib/libvdr-${lib}* ; \
    done
